# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Testvars for Locale CA in int Einvironment and Realm america
- Location: /home/runner/work/playwrightAutoTest/playwrightAutoTest/tests/variables.spec.js:9:1

# Error details

```
Error: expect(received).toStrictEqual(expected) // deep equality

Expected: "Env test"
Received: "YOURS3BUCKET"
    at HomePage.envTest (/home/runner/work/playwrightAutoTest/playwrightAutoTest/pages/homePage.js:39:20)
    at /home/runner/work/playwrightAutoTest/playwrightAutoTest/tests/variables.spec.js:13:18
```

# Test source

```ts
   1 | // homePage.js
   2 | const { expect } = require("@playwright/test");
   3 | const { loadConfig } = require("../utils/loadConfig");
   4 |
   5 | exports.HomePage = class HomePage {
   6 |   /**
   7 |    * @param {import('@playwright/test').Page} page
   8 |    */
   9 |   constructor(page) {
  10 |     this.page = page;
  11 |   }
  12 |
  13 |   async goto() {
  14 |     const environment = process.env.ENVIRONMENT;
  15 |     // const locale = process.env.LOCALE;
  16 |     const realm = process.env.REALM;
  17 |     const config = loadConfig(realm, environment);
  18 |     const url = config.baseUrl;
  19 |     console.log(config);
  20 |     await this.page.goto(url);
  21 |     await this.page.waitForLoadState("domcontentloaded");
  22 |     await this.page.waitForLoadState("load");
  23 |     await this.page.waitForLoadState("networkidle");
  24 |   }
  25 |
  26 |   async checkH1HeadingKO() {
  27 |     await expect(this.page.locator("#signup-modal-title")).toBeHidden();
  28 |   }
  29 |
  30 |   async checkH1HeadingOK() {
  31 |     await expect(this.page.locator("#signup-modal-title")).toBeHidden();
  32 |   }
  33 |
  34 |   async failedTest() {
  35 |     expect(1).toEqual(2);
  36 |   }
  37 |
  38 |   async envTest(envVar) {
> 39 |     expect(envVar).toStrictEqual("Env test");
     |                    ^ Error: expect(received).toStrictEqual(expected) // deep equality
  40 |   }
  41 | };
  42 |
```