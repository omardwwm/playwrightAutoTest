name: Run Playwright Tests

on:
  schedule:
    # - cron: "*/5 * * * *" # Every 5 MINUTES
    - cron: "0 16 * * *" # Every day at 09:00 UTC
    - cron: "0 17 * * *" # Every day at 21:00 UTC
  push:
    branches: [main, develop]
  pull_request:
    branches:
      - "main"

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment:
          - int
          - dev
        shard: [1, 2, 3, 4]

    env:
      DEV_ALL_REALM_BASE_URL: ${{vars.DEV_ALL_REALM_BASE_URL}}
      INT_REALM_AS_BASE_URL: ${{vars.INT_REALM_AS_BASE_URL}}
      INT_REALM_EU_BASE_URL: ${{vars.INT_REALM_EU_BASE_URL}}
      INT_REALM_US_BASE_URL: ${{vars.INT_REALM_US_BASE_URL}}
      S3_BUCKET: ${{vars.S3_BUCKET}}
      CI_ENV: ${{vars.CI_ENV}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cash: "npm"
          cash-dependency-path: "package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Install allure-commandline
        run: npm install allure-commandline

      - name: Verify allure version
        run: npx allure --version

      - name: Delete old Allure results for environment and shard
        run: |
          if [ -d "allure-results-${{ matrix.environment }}-${{ matrix.shard }}" ]; then
            rm -rf allure-results-${{ matrix.environment }}-${{ matrix.shard }}
          fi

      - name: Run Playwright tests
        run: npm run test:env ${{ matrix.environment }} ${{ matrix.shard }}
        continue-on-error: true
        if: |
          github.event_name == 'push' && matrix.environment == 'dev' ||
          github.event_name == 'schedule' && github.event.schedule == '0 9 * * *' && matrix.environment == 'dev' || 
          github.event_name == 'schedule' && github.event.schedule == '0 21 * * *' && matrix.environment == 'int'

      # - name: List allure results
      #   run: ls -alh allure-results

      - name: Upload Allure results for ${{ matrix.environment }} -shard ${{ matrix.shard }}
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.environment }}-${{ matrix.shard }}
          path: allure-results

  merge_results:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        environment: [int, dev]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Allure results from shards
        run: |
          mkdir -p allure-results/combined
          for shard in 1 2 3 4; do
            cp -r allure-results-${{ matrix.environment }}-shard-${shard}/* allure-results/combined/ || true
          done

      - name: Install allure-commandline
        run: npm install -g allure-commandline

      - name: Verify allure version
        run: npx allure --version

      - name: Merge Allure results and generate report
        run: |
          npx allure generate allure-results/combined --clean -o allure-report-${{ matrix.environment }}
          ls -alh allure-report-${{ matrix.environment }}

      - name: Upload Mrged Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.environment }}
          path: allure-report-${{ matrix.environment }}

      # Conditional execution based on environment
    if: needs.test.result == 'success'

  deploy:
    runs-on: ubuntu-latest
    needs: merge_results
    if: always()
    strategy:
      matrix:
        environment: [int, dev]
      max-parallel: 1 # Avoid parallel deployment to prevent conflicts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git User
        run: |
          git config --global user.name "omardwwm"
          git config --global user.email "boudraa.omar@gmail.com"

      - name: Ensure environment directory exists
        run: mkdir -p docs/allure-report-${{ matrix.environment }}

      - name: Remove old report files
        run: rm -rf docs/allure-report-${{ matrix.environment }}/*

      - name: Download Allure Report
        uses: actions/download-artifact@v4
        with:
          name: allure-report-${{ matrix.environment }}
          path: docs/allure-report-${{ matrix.environment }}

      - name: Commit and Deploy Allure Report to GitHub Pages
        run: |
          git add docs/
          git commit -m "Update Allure report for ${{ matrix.environment }}"
          git push origin gh-pages --force
