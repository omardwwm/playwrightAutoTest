name: Run Playwright Tests

on:
  schedule:
    # - cron: "*/5 * * * *" # Every 5 MINUTES
    - cron: "0 9 * * *" # Every day at 09:00 UTC
    - cron: "0 21 * * *" # Every day at 21:00 UTC
  push:
    branches: [main, develop]
  pull_request:
    branches:
      - "main"

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment:
          - int
          # - dev
        shard: [1, 2] 

    env:
        DEV_ALL_REALM_BASE_URL: ${{vars.DEV_ALL_REALM_BASE_URL}}
        INT_REALM_AS_BASE_URL: ${{vars.INT_REALM_AS_BASE_URL}}
        INT_REALM_EU_BASE_URL: ${{vars.INT_REALM_EU_BASE_URL}}
        INT_REALM_US_BASE_URL: ${{vars.INT_REALM_US_BASE_URL}}
        S3_BUCKET: ${{vars.S3_BUCKET}}
        CI_ENV: ${{vars.CI_ENV}}    

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cash: "npm"
          cash-dependency-path: "package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Install allure-commandline
        run: npm install allure-commandline
        
      - name: Verify allure version
        run: npx allure --version

      # - name: Install cross-'nv'
      #   run: npm install --save-dev cross-env
      
      # - name: Set environment-specific variables
      #   run: |
      #     if [ "${{ matrix.environment }}" == "int" ]; then
      #       export MY_VAR=${{ secrets.PROD_MY_VAR }}
      #       export NODE_ENV=int
      #     elif [ "${{ matrix.environment }}" == "dev" ]; then
      #       export MY_VAR=${{ secrets.DEV_MY_VAR }}
      #       export NODE_ENV=dev
      #     fi
      #     echo "Environment: $NODE_ENV"
      #     echo "MY_VAR: $MY_VAR"

      - name: Delete old Allure results
        run: |
          if [ -d "allure-results" ]; then
            rm -rf allure-results
          fi

      - name: Run Playwright tests
        run: npm run test:env ${{ matrix.environment }} ${{ matrix.shard }}
        continue-on-error: true

      # - name: List allure results
      #   run: ls -alh allure-results

      - name: Upload Allure results for shard ${{matrix.shard}}
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-shard-${{matrix.shard}}
          path: allure-results

      # - name: Upload Allure Report
      #   uses: actions/upload-artifact@v4
      #   if: always()
      #   with:
      #     name: allure-report
      #     path: allure-report
  generate-report:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Download Allure results from shard 1
        uses: actions/download-artifact@v4
        with:
          name: allure-results-shard-1
          path: allure-results-shard-1

      - name: Download Allure results from shard 2
        uses: actions/download-artifact@v4
        with:
          name: allure-results-shard-2
          path: allure-results-shard-2

      # - name: Download Allure results from shard 3
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: allure-results-shard-3
      #     path: allure-results-shard-3

      # - name: Download Allure results from shard 4
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: allure-results-shard-4
      #     path: allure-results-shard-4

      - name: Merge Allure results
        run: |
          mkdir -p merged-allure-results
          cp -r allure-results-shard-1/* merged-allure-results/
          cp -r allure-results-shard-2/* merged-allure-results/
          # cp -r allure-results-shard-3/* merged-allure-results/
          # cp -r allure-results-shard-4/* merged-allure-results/

      - name: Generate Allure report
        run: npx allure generate merged-allure-results --clean -o allure-report

      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
    

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Download Allure Report
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
