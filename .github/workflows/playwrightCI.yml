name: CI PUSH & SCHEDULED Run Playwright Tests

on:
  schedule:
    - cron: "0 9 * * *" # Every day at 09:00 UTC
    - cron: "0 21 * * *" # Every day at 21:00 UTC
  push:
    branches: [main, develop]
  pull_request:
    branches:
      - "main"

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment:
          # - int
          - dev
        shard: [1, 2, 3, 4]

    env:
      DEV_ALL_REALM_BASE_URL: ${{vars.DEV_ALL_REALM_BASE_URL}}
      INT_REALM_AS_BASE_URL: ${{vars.INT_REALM_AS_BASE_URL}}
      INT_REALM_EU_BASE_URL: ${{vars.INT_REALM_EU_BASE_URL}}
      INT_REALM_US_BASE_URL: ${{vars.INT_REALM_US_BASE_URL}}
      S3_BUCKET: ${{vars.S3_BUCKET}}
      CI_ENV: ${{vars.CI_ENV}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cash: "npm"
          cash-dependency-path: "package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Install allure-commandline
        run: npm install allure-commandline

      - name: Verify allure version
        run: npx allure --version

      - name: Delete old Allure results
        run: |
          if [ -d "allure-results" ]; then
            rm -rf allure-results
          fi

      - name: Run Playwright tests
        run: npm run test:env ${{ matrix.environment }} ${{ matrix.shard }}
        continue-on-error: true

      # - name: List allure results
      #   run: ls -alh allure-results

      - name: Upload Allure results for ${{ matrix.environment }} -shard ${{ matrix.shard }}
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.environment }}-${{ matrix.shard }}
          path: allure-results

      # - name: Upload Allure Report
      #   uses: actions/upload-artifact@v4
      #   if: always()
      #   with:
      #     name: allure-report
      #     path: allure-report

  merge_results:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        environment:
          # - int
          - dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Allure results from all shards
        uses: actions/download-artifact@v4
        with:
          name: allure-results-${{ matrix.environment }}-1
          path: allure-results-${{ matrix.environment }}/1
        continue-on-error: true

      - name: Download Allure results from all shards
        uses: actions/download-artifact@v4
        with:
          name: allure-results-${{ matrix.environment }}-2
          path: allure-results-${{ matrix.environment }}/2
        continue-on-error: true

      - name: Download Allure results from all shards
        uses: actions/download-artifact@v4
        with:
          name: allure-results-${{ matrix.environment }}-3
          path: allure-results-${{ matrix.environment }}/3
        continue-on-error: true

      - name: Download Allure results from all shards
        uses: actions/download-artifact@v4
        with:
          name: allure-results-${{ matrix.environment }}-4
          path: allure-results-${{ matrix.environment }}/4
        continue-on-error: true

      - name: Install allure-commandline
        run: npm install -g allure-commandline

      - name: Verify allure version
        run: npx allure --version

      - name: Merge Allure results and generate report
        run: |
          mkdir -p allure-results/combined
          # Combine results from all shards into a single directory
          cp -r allure-results-${{ matrix.environment }}/1/* allure-results/combined/ || true
          cp -r allure-results-${{ matrix.environment }}/2/* allure-results/combined/ || true
          cp -r allure-results-${{ matrix.environment }}/3/* allure-results/combined/ || true
          cp -r allure-results-${{ matrix.environment }}/4/* allure-results/combined/ || true
          # Generate the Allure report
          npx allure generate allure-results/combined --clean -o allure-report-${{ matrix.environment }}
          # List contents of the report directory for debugging
          ls -alh allure-report-${{ matrix.environment }}

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.environment }}
          path: allure-report-${{ matrix.environment }}

  deploy:
    runs-on: ubuntu-latest
    needs: merge_results
    strategy:
      matrix:
        environment:
          # - int
          - dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Verify .git directory exists before cleanup
        run: | 
          ls -la .git || echo ".git directory not found"

      - name: Clean up old files, keeping only the docs folder
        run: |
          # Remove everything except docs and .git
          find . -mindepth 1 -maxdepth 1 ! -name 'docs' ! -name '.git' -exec rm -rf {} +
          find docs -mindepth 1 ! -name 'docs' -exec rm -rf {} +

      - name: Download Allure Report
        uses: actions/download-artifact@v4
        with:
          name: allure-report-${{ matrix.environment }}
          path: gh-pages/docs/${{ matrix.environment }}/

      - name: Manage Ran Env folders
        run: |
          # Ensure environment folder exists
          mkdir -p gh-pages/docs/${{ matrix.environment }}
          # Clean the current environment folder
          find gh-pages/docs/${{ matrix.environment }} -mindepth 1 -exec rm -rf {} +
          # Copy the new report into the environment folder
          cp -r gh-pages/docs/${{ matrix.environment }}/allure-report-${{ matrix.environment }}/* gh-pages/docs/${{ matrix.environment }}/  

      - name: Configure Git User
        run: |
          git config --global user.name "omardwwm"
          git config --global user.email "boudraa.omar@gmail.com"

      - name: Check git status
        run: git status

      - name: Commit and push updated report
        run: |
          git add docs/
          git commit -m "Update Allure report for ${{ matrix.environment }}"
          git push origin gh-pages --force
